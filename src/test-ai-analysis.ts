/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò–ò –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */

import dotenv from 'dotenv';
import { getAIAnalysisService } from './ai/AIAnalysisService';
import { newsScoreService } from './ai/NewsScoreService';
import { aiProcessorService } from './services/AIProcessorService';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

/**
 * –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
 */
const testMessages = [
  {
    content: "–°—Ä–æ—á–Ω–æ! –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –ø–æ–¥–ø–∏—Å–∞–ª –≤–∞–∂–Ω—ã–π —É–∫–∞–∑ –æ –Ω–æ–≤—ã—Ö —Å–∞–Ω–∫—Ü–∏—è—Ö. –≠—Ç–æ –º–æ–∂–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —ç–∫–æ–Ω–æ–º–∏–∫—É —Å—Ç—Ä–∞–Ω—ã.",
    channelName: "–†–ë–ö –ù–æ–≤–æ—Å—Ç–∏",
    mediaType: "text" as const
  },
  {
    content: "–°–µ–≥–æ–¥–Ω—è —Ö–æ—Ä–æ—à–∞—è –ø–æ–≥–æ–¥–∞ üåû",
    channelName: "–ü–æ–≥–æ–¥–∞ —Å–µ–≥–æ–¥–Ω—è", 
    mediaType: "text" as const
  },
  {
    content: "–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –≤—ã—Ä–æ—Å –Ω–∞ 5 —Ä—É–±–ª–µ–π. –¶–ë –†–§ –ø—Ä–æ–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–ª —Å–∏—Ç—É–∞—Ü–∏—é –Ω–∞ –≤–∞–ª—é—Ç–Ω–æ–º —Ä—ã–Ω–∫–µ.",
    channelName: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏",
    mediaType: "text" as const
  },
  {
    content: "‚ö° –ú–û–õ–ù–ò–Ø: –í —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã –ø—Ä–æ–∏–∑–æ—à–µ–ª –≤–∑—Ä—ã–≤. –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã —É–∂–µ –Ω–∞ –º–µ—Å—Ç–µ.",
    channelName: "–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏",
    mediaType: "text" as const
  },
  {
    content: "–°–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞—à–∏ —Å–∫–∏–¥–∫–∏! –ü–æ–∫—É–ø–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã —Å–æ —Å–∫–∏–¥–∫–æ–π –¥–æ 50%! –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ!",
    channelName: "–†–µ–∫–ª–∞–º–∞",
    mediaType: "text" as const
  }
];

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞
 */
async function testAIAnalysis(): Promise<void> {
  console.log('ü§ñ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ò–ò –∞–Ω–∞–ª–∏–∑–∞...\n');

  try {
    const aiService = getAIAnalysisService();
    console.log('‚úÖ AI —Å–µ—Ä–≤–∏—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω\n');

    for (let i = 0; i < testMessages.length; i++) {
      const message = testMessages[i];
      console.log(`üìù –¢–µ—Å—Ç ${i + 1}: –ê–Ω–∞–ª–∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è`);
      console.log(`–ö–∞–Ω–∞–ª: ${message.channelName}`);
      console.log(`–ö–æ–Ω—Ç–µ–Ω—Ç: "${message.content}"`);
      console.log('‚îÄ'.repeat(50));

      try {
        // –ò–ò –∞–Ω–∞–ª–∏–∑
        const aiAnalysis = await aiService.analyzeContent(
          message.content,
          message.channelName,
          message.mediaType
        );

        console.log('üß† –†–µ–∑—É–ª—å—Ç–∞—Ç –ò–ò –∞–Ω–∞–ª–∏–∑–∞:');
        console.log(`  –í–∞–∂–Ω–æ—Å—Ç—å: ${aiAnalysis.importance.score}/100`);
        console.log(`  –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${aiAnalysis.category.category} (${Math.round(aiAnalysis.category.confidence * 100)}%)`);
        console.log(`  –¢–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${aiAnalysis.sentiment}`);
        console.log(`  –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${aiAnalysis.keywords.join(', ')}`);
        console.log(`  –°–ø–∞–º: ${aiAnalysis.isSpam ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`  –†–µ–∫–ª–∞–º–∞: ${aiAnalysis.isAd ? '–î–∞' : '–ù–µ—Ç'}`);
        
        if (aiAnalysis.summary) {
          console.log(`  –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ: ${aiAnalysis.summary}`);
        }

        // News scoring
        const newsScore = await newsScoreService.calculateScore(
          message.content,
          aiAnalysis,
          message.channelName,
          Math.floor(Math.random() * 100000), // —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
          Math.random() > 0.5, // —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
          message.mediaType
        );

        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç scoring:');
        console.log(`  –ò—Ç–æ–≥–æ–≤—ã–π –±–∞–ª–ª: ${newsScore.finalScore}/100`);
        console.log(`  –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è: ${newsScore.classification}`);
        console.log('  –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:');
        console.log(`    - –ö–æ–Ω—Ç–µ–Ω—Ç: ${newsScore.breakdown.contentScore}/100`);
        console.log(`    - –ò–ò –∞–Ω–∞–ª–∏–∑: ${newsScore.breakdown.aiScore}/100`);
        console.log(`    - –ò—Å—Ç–æ—á–Ω–∏–∫: ${newsScore.breakdown.sourceScore}/100`);
        console.log(`    - –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å: ${newsScore.breakdown.timelinesScore}/100`);
        
        console.log('  –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:');
        newsScore.reasoning.forEach(reason => {
          console.log(`    ‚Ä¢ ${reason}`);
        });

      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error}`);
      }

      console.log('\n' + '‚ïê'.repeat(60) + '\n');
    }

  } catch (error) {
    console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: ${error}`);
  }
}

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI Processor Service
 */
async function testAIProcessor(): Promise<void> {
  console.log('‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI Processor Service...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
    const isHealthy = aiProcessorService.isHealthy();
    console.log(`–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: ${isHealthy ? '‚úÖ –ó–¥–æ—Ä–æ–≤' : '‚ùå –ù–µ–∏—Å–ø—Ä–∞–≤–µ–Ω'}`);

    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = await aiProcessorService.getProcessingStats();
    console.log('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏:');
    console.log(`  –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${stats.total}`);
    console.log(`  –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.processed}`);
    console.log(`  –ù–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${stats.unprocessed}`);
    console.log(`  –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –≤–∞–∂–Ω–æ—Å—Ç–∏: ${stats.avgImportanceScore}`);

    console.log('\n‚úÖ AI Processor —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω\n');

  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è AI Processor: ${error}`);
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
async function main(): Promise<void> {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ò–ò –∞–Ω–∞–ª–∏–∑–∞\n');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞
  if (!process.env.OPENAI_API_KEY) {
    console.error('‚ùå OPENAI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('–î–æ–±–∞–≤—å—Ç–µ –∫–ª—é—á –≤ —Ñ–∞–π–ª .env:');
    console.log('OPENAI_API_KEY=your_api_key_here');
    return;
  }

  await testAIAnalysis();
  await testAIProcessor();

  console.log('üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}